:80, localhost {
	# Development configuration
	handle /api/* {
		reverse_proxy api:8000 {
			header_up Host {http.request.header.Host}
			header_up X-Real-IP {http.request.remote.host}
			header_up X-Forwarded-For {http.request.remote.host}
			header_up X-Forwarded-Proto {http.request.scheme}
		}
	}
	
	handle /docgen/* {
		reverse_proxy docgen:8000
	}
	
	handle {
		reverse_proxy web:5173 {
			header_up Host {http.request.header.Host}
			header_up X-Real-IP {http.request.remote.host}
			header_up X-Forwarded-For {http.request.remote.host}
			header_up X-Forwarded-Proto {http.request.scheme}
		}
	}
}

outreachintake.aritasconsulting.com {
	# Production configuration
	# Caddy automatically gets Let's Encrypt certificate
	
	# Handle API requests
	handle /api/* {
		reverse_proxy api:8000 {
			header_up Host {http.request.header.Host}
			header_up X-Real-IP {http.request.remote.host}
			header_up X-Forwarded-For {http.request.remote.host}
			header_up X-Forwarded-Proto {http.request.scheme}
		}
	}
	
	# Handle docgen requests
	handle /docgen/* {
		reverse_proxy docgen:8000
	}
	
	# Service worker needs special headers and no caching
	handle /sw.js {
		reverse_proxy web:5173 {
			header_down Cache-Control "no-cache, no-store, must-revalidate"
			header_down Pragma "no-cache"
			header_down Service-Worker-Allowed "/"
		}
	}
	
	# Handle everything else
	handle {
		reverse_proxy web:5173 {
			header_up Host {http.request.header.Host}
			header_up X-Real-IP {http.request.remote.host}
			header_up X-Forwarded-For {http.request.remote.host}
			header_up X-Forwarded-Proto {http.request.scheme}
		}
	}
}
